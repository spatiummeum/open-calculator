{"version":3,"names":["describe","IVA_RATE","test","testCases","value","isHalf","expected","forEach","baseValue","expect","toBe","valueWithIva","toBeCloseTo","product","products","totalDiscount","originalTotal","discountAmount","newTotal","invoiceTotal","isNaN","isFinite","toBeGreaterThan","toBeLessThan"],"sources":["calculations.test.js"],"sourcesContent":["/**\n * TESTS DE CÁLCULOS DE DESCUENTOS\n * Pruebas para verificar la lógica de cálculo de descuentos con IVA\n */\n\ndescribe('Cálculos de Descuentos con IVA', () => {\n  \n  const IVA_RATE = 0.19; // 19% IVA chileno\n  \n  describe('Cálculo de Valor Base', () => {\n    \n    test('Debe calcular valor completo cuando isHalf = false', () => {\n      const testCases = [\n        { value: 1000, isHalf: false, expected: 1000 },\n        { value: 2500.50, isHalf: false, expected: 2500.50 },\n        { value: 10000, isHalf: false, expected: 10000 }\n      ];\n      \n      testCases.forEach(({ value, isHalf, expected }) => {\n        const baseValue = isHalf ? value / 2 : value;\n        expect(baseValue).toBe(expected);\n      });\n    });\n    \n    test('Debe calcular valor mitad cuando isHalf = true (unidades)', () => {\n      const testCases = [\n        { value: 1000, isHalf: true, expected: 500 },\n        { value: 2500.50, isHalf: true, expected: 1250.25 },\n        { value: 10000, isHalf: true, expected: 5000 }\n      ];\n      \n      testCases.forEach(({ value, isHalf, expected }) => {\n        const baseValue = isHalf ? value / 2 : value;\n        expect(baseValue).toBe(expected);\n      });\n    });\n  });\n  \n  describe('Cálculo de IVA', () => {\n    \n    test('Debe aplicar IVA del 19% correctamente', () => {\n      const testCases = [\n        { baseValue: 1000, expected: 1190 },\n        { baseValue: 2500, expected: 2975 },\n        { baseValue: 10000, expected: 11900 }\n      ];\n      \n      testCases.forEach(({ baseValue, expected }) => {\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        expect(valueWithIva).toBe(expected);\n      });\n    });\n    \n    test('Debe manejar decimales en cálculo de IVA', () => {\n      const testCases = [\n        { baseValue: 1000.50, expected: 1190.595 },\n        { baseValue: 2500.25, expected: 2975.2975 },\n        { baseValue: 999.99, expected: 1189.9881 }\n      ];\n      \n      testCases.forEach(({ baseValue, expected }) => {\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        expect(valueWithIva).toBeCloseTo(expected, 4);\n      });\n    });\n  });\n  \n  describe('Cálculo de Descuento Total', () => {\n    \n    test('Debe calcular descuento para un solo producto', () => {\n      const product = { value: 1000, isHalf: false };\n      const baseValue = product.isHalf ? product.value / 2 : product.value;\n      const valueWithIva = baseValue * (1 + IVA_RATE);\n      \n      expect(valueWithIva).toBe(1190);\n    });\n    \n    test('Debe calcular descuento para múltiples productos', () => {\n      const products = [\n        { value: 1000, isHalf: false }, // 1000 * 1.19 = 1190\n        { value: 2000, isHalf: true },  // 1000 * 1.19 = 1190\n        { value: 3000, isHalf: false }  // 3000 * 1.19 = 3570\n      ];\n      \n      let totalDiscount = 0;\n      products.forEach(product => {\n        const baseValue = product.isHalf ? product.value / 2 : product.value;\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        totalDiscount += valueWithIva;\n      });\n      \n      expect(totalDiscount).toBe(5950); // 1190 + 1190 + 3570\n    });\n  });\n  \n  describe('Cálculo de Nuevo Total de Factura', () => {\n    \n    test('Debe calcular nuevo total después del descuento', () => {\n      const originalTotal = 100000;\n      const discountAmount = 5950;\n      const newTotal = originalTotal - discountAmount;\n      \n      expect(newTotal).toBe(94050);\n    });\n    \n    test('Debe manejar casos donde el descuento es mayor que el total', () => {\n      const originalTotal = 1000;\n      const discountAmount = 1500;\n      const newTotal = originalTotal - discountAmount;\n      \n      expect(newTotal).toBe(-500);\n      expect(newTotal < 0).toBe(true);\n    });\n  });\n  \n  describe('Casos de Prueba Específicos del Negocio', () => {\n    \n    test('Escenario típico: Factura de $100.000 con productos mixtos', () => {\n      const invoiceTotal = 100000;\n      const products = [\n        { value: 5000, isHalf: false },   // Producto completo\n        { value: 8000, isHalf: true },    // Unidades (mitad)\n        { value: 3000, isHalf: false }    // Producto completo\n      ];\n      \n      let totalDiscount = 0;\n      products.forEach(product => {\n        const baseValue = product.isHalf ? product.value / 2 : product.value;\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        totalDiscount += valueWithIva;\n      });\n      \n      const newTotal = invoiceTotal - totalDiscount;\n      \n      // Verificar cálculos paso a paso\n      expect(totalDiscount).toBeCloseTo(14280, 2); // 5950 + 4760 + 3570 = 14280\n      expect(newTotal).toBeCloseTo(85720, 2); // 100000 - 14280 = 85720\n    });\n    \n    test('Escenario edge case: Producto muy pequeño', () => {\n      const product = { value: 1, isHalf: false };\n      const baseValue = product.isHalf ? product.value / 2 : product.value;\n      const valueWithIva = baseValue * (1 + IVA_RATE);\n      \n      expect(valueWithIva).toBe(1.19);\n    });\n    \n    test('Escenario edge case: Producto con unidades muy pequeño', () => {\n      const product = { value: 2, isHalf: true };\n      const baseValue = product.isHalf ? product.value / 2 : product.value;\n      const valueWithIva = baseValue * (1 + IVA_RATE);\n      \n      expect(valueWithIva).toBe(1.19);\n    });\n  });\n  \n  describe('Precisión de Cálculos Flotantes', () => {\n    \n    test('Debe manejar correctamente números flotantes', () => {\n      const testCases = [\n        { value: 1000.33, isHalf: false },\n        { value: 2500.67, isHalf: true },\n        { value: 999.99, isHalf: false }\n      ];\n      \n      testCases.forEach(({ value, isHalf }) => {\n        const baseValue = isHalf ? value / 2 : value;\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        \n        // Verificar que el resultado es un número válido\n        expect(typeof valueWithIva).toBe('number');\n        expect(isNaN(valueWithIva)).toBe(false);\n        expect(isFinite(valueWithIva)).toBe(true);\n      });\n    });\n    \n    test('Debe mantener precisión adecuada para moneda', () => {\n      const product = { value: 1000.33, isHalf: false };\n      const baseValue = product.isHalf ? product.value / 2 : product.value;\n      const valueWithIva = baseValue * (1 + IVA_RATE);\n      \n      // Verificar que mantiene precisión suficiente\n      expect(valueWithIva).toBeCloseTo(1190.3927, 4);\n    });\n  });\n  \n  describe('Validación de Resultados', () => {\n    \n    test('Los descuentos nunca deben ser negativos', () => {\n      const products = [\n        { value: 1000, isHalf: false },\n        { value: 2000, isHalf: true },\n        { value: 5000, isHalf: false }\n      ];\n      \n      products.forEach(product => {\n        const baseValue = product.isHalf ? product.value / 2 : product.value;\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        \n        expect(valueWithIva).toBeGreaterThan(0);\n      });\n    });\n    \n    test('El descuento con IVA debe ser mayor que el valor base', () => {\n      const products = [\n        { value: 1000, isHalf: false },\n        { value: 2000, isHalf: true }\n      ];\n      \n      products.forEach(product => {\n        const baseValue = product.isHalf ? product.value / 2 : product.value;\n        const valueWithIva = baseValue * (1 + IVA_RATE);\n        \n        expect(valueWithIva).toBeGreaterThan(baseValue);\n      });\n    });\n  });\n});\n\ndescribe('Casos de Prueba de Integración Completa', () => {\n  \n  test('Flujo completo: Desde entrada hasta resultado final', () => {\n    // Datos de entrada\n    const invoiceTotal = 50000;\n    const products = [\n      { value: 2000, isHalf: false },\n      { value: 3000, isHalf: true },\n      { value: 1000, isHalf: false }\n    ];\n    \n    // Cálculo paso a paso\n    let totalDiscount = 0;\n    const IVA_RATE = 0.19;\n    \n    products.forEach(product => {\n      const baseValue = product.isHalf ? product.value / 2 : product.value;\n      const valueWithIva = baseValue * (1 + IVA_RATE);\n      totalDiscount += valueWithIva;\n    });\n    \n    const newTotal = invoiceTotal - totalDiscount;\n    \n    // Verificaciones\n    expect(totalDiscount).toBeGreaterThan(0);\n    expect(newTotal).toBeLessThan(invoiceTotal);\n    expect(typeof newTotal).toBe('number');\n    expect(isFinite(newTotal)).toBe(true);\n  });\n});"],"mappings":"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","ignoreList":[]}